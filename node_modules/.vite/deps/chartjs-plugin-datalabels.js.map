{
  "version": 3,
  "sources": ["../../chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js"],
  "sourcesContent": ["/*!\r\n * chartjs-plugin-datalabels v2.2.0\r\n * https://chartjs-plugin-datalabels.netlify.app\r\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\r\n * Released under the MIT license\r\n */\r\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\r\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\r\n\r\nvar devicePixelRatio = (function() {\r\n  if (typeof window !== 'undefined') {\r\n    if (window.devicePixelRatio) {\r\n      return window.devicePixelRatio;\r\n    }\r\n\r\n    // devicePixelRatio is undefined on IE10\r\n    // https://stackoverflow.com/a/20204180/8837887\r\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\r\n    var screen = window.screen;\r\n    if (screen) {\r\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\r\n    }\r\n  }\r\n\r\n  return 1;\r\n}());\r\n\r\nvar utils = {\r\n  // @todo move this in Chart.helpers.toTextLines\r\n  toTextLines: function(inputs) {\r\n    var lines = [];\r\n    var input;\r\n\r\n    inputs = [].concat(inputs);\r\n    while (inputs.length) {\r\n      input = inputs.pop();\r\n      if (typeof input === 'string') {\r\n        lines.unshift.apply(lines, input.split('\\n'));\r\n      } else if (Array.isArray(input)) {\r\n        inputs.push.apply(inputs, input);\r\n      } else if (!isNullOrUndef(inputs)) {\r\n        lines.unshift('' + input);\r\n      }\r\n    }\r\n\r\n    return lines;\r\n  },\r\n\r\n  // @todo move this in Chart.helpers.canvas.textSize\r\n  // @todo cache calls of measureText if font doesn't change?!\r\n  textSize: function(ctx, lines, font) {\r\n    var items = [].concat(lines);\r\n    var ilen = items.length;\r\n    var prev = ctx.font;\r\n    var width = 0;\r\n    var i;\r\n\r\n    ctx.font = font.string;\r\n\r\n    for (i = 0; i < ilen; ++i) {\r\n      width = Math.max(ctx.measureText(items[i]).width, width);\r\n    }\r\n\r\n    ctx.font = prev;\r\n\r\n    return {\r\n      height: ilen * font.lineHeight,\r\n      width: width\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\r\n   * @todo move this method in Chart.helpers.bound\r\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\r\n   */\r\n  bound: function(min, value, max) {\r\n    return Math.max(min, Math.min(value, max));\r\n  },\r\n\r\n  /**\r\n   * Returns an array of pair [value, state] where state is:\r\n   * * -1: value is only in a0 (removed)\r\n   * *  1: value is only in a1 (added)\r\n   */\r\n  arrayDiff: function(a0, a1) {\r\n    var prev = a0.slice();\r\n    var updates = [];\r\n    var i, j, ilen, v;\r\n\r\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\r\n      v = a1[i];\r\n      j = prev.indexOf(v);\r\n\r\n      if (j === -1) {\r\n        updates.push([v, 1]);\r\n      } else {\r\n        prev.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\r\n      updates.push([prev[i], -1]);\r\n    }\r\n\r\n    return updates;\r\n  },\r\n\r\n  /**\r\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\r\n   */\r\n  rasterize: function(v) {\r\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\r\n  }\r\n};\r\n\r\nfunction orient(point, origin) {\r\n  var x0 = origin.x;\r\n  var y0 = origin.y;\r\n\r\n  if (x0 === null) {\r\n    return {x: 0, y: -1};\r\n  }\r\n  if (y0 === null) {\r\n    return {x: 1, y: 0};\r\n  }\r\n\r\n  var dx = point.x - x0;\r\n  var dy = point.y - y0;\r\n  var ln = Math.sqrt(dx * dx + dy * dy);\r\n\r\n  return {\r\n    x: ln ? dx / ln : 0,\r\n    y: ln ? dy / ln : -1\r\n  };\r\n}\r\n\r\nfunction aligned(x, y, vx, vy, align) {\r\n  switch (align) {\r\n  case 'center':\r\n    vx = vy = 0;\r\n    break;\r\n  case 'bottom':\r\n    vx = 0;\r\n    vy = 1;\r\n    break;\r\n  case 'right':\r\n    vx = 1;\r\n    vy = 0;\r\n    break;\r\n  case 'left':\r\n    vx = -1;\r\n    vy = 0;\r\n    break;\r\n  case 'top':\r\n    vx = 0;\r\n    vy = -1;\r\n    break;\r\n  case 'start':\r\n    vx = -vx;\r\n    vy = -vy;\r\n    break;\r\n  case 'end':\r\n    // keep natural orientation\r\n    break;\r\n  default:\r\n    // clockwise rotation (in degree)\r\n    align *= (Math.PI / 180);\r\n    vx = Math.cos(align);\r\n    vy = Math.sin(align);\r\n    break;\r\n  }\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    vx: vx,\r\n    vy: vy\r\n  };\r\n}\r\n\r\n// Line clipping (Cohen–Sutherland algorithm)\r\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\r\n\r\nvar R_INSIDE = 0;\r\nvar R_LEFT = 1;\r\nvar R_RIGHT = 2;\r\nvar R_BOTTOM = 4;\r\nvar R_TOP = 8;\r\n\r\nfunction region(x, y, rect) {\r\n  var res = R_INSIDE;\r\n\r\n  if (x < rect.left) {\r\n    res |= R_LEFT;\r\n  } else if (x > rect.right) {\r\n    res |= R_RIGHT;\r\n  }\r\n  if (y < rect.top) {\r\n    res |= R_TOP;\r\n  } else if (y > rect.bottom) {\r\n    res |= R_BOTTOM;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction clipped(segment, area) {\r\n  var x0 = segment.x0;\r\n  var y0 = segment.y0;\r\n  var x1 = segment.x1;\r\n  var y1 = segment.y1;\r\n  var r0 = region(x0, y0, area);\r\n  var r1 = region(x1, y1, area);\r\n  var r, x, y;\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    if (!(r0 | r1) || (r0 & r1)) {\r\n      // both points inside or on the same side: no clipping\r\n      break;\r\n    }\r\n\r\n    // at least one point is outside\r\n    r = r0 || r1;\r\n\r\n    if (r & R_TOP) {\r\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\r\n      y = area.top;\r\n    } else if (r & R_BOTTOM) {\r\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\r\n      y = area.bottom;\r\n    } else if (r & R_RIGHT) {\r\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\r\n      x = area.right;\r\n    } else if (r & R_LEFT) {\r\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\r\n      x = area.left;\r\n    }\r\n\r\n    if (r === r0) {\r\n      x0 = x;\r\n      y0 = y;\r\n      r0 = region(x0, y0, area);\r\n    } else {\r\n      x1 = x;\r\n      y1 = y;\r\n      r1 = region(x1, y1, area);\r\n    }\r\n  }\r\n\r\n  return {\r\n    x0: x0,\r\n    x1: x1,\r\n    y0: y0,\r\n    y1: y1\r\n  };\r\n}\r\n\r\nfunction compute$1(range, config) {\r\n  var anchor = config.anchor;\r\n  var segment = range;\r\n  var x, y;\r\n\r\n  if (config.clamp) {\r\n    segment = clipped(segment, config.area);\r\n  }\r\n\r\n  if (anchor === 'start') {\r\n    x = segment.x0;\r\n    y = segment.y0;\r\n  } else if (anchor === 'end') {\r\n    x = segment.x1;\r\n    y = segment.y1;\r\n  } else {\r\n    x = (segment.x0 + segment.x1) / 2;\r\n    y = (segment.y0 + segment.y1) / 2;\r\n  }\r\n\r\n  return aligned(x, y, range.vx, range.vy, config.align);\r\n}\r\n\r\nvar positioners = {\r\n  arc: function(el, config) {\r\n    var angle = (el.startAngle + el.endAngle) / 2;\r\n    var vx = Math.cos(angle);\r\n    var vy = Math.sin(angle);\r\n    var r0 = el.innerRadius;\r\n    var r1 = el.outerRadius;\r\n\r\n    return compute$1({\r\n      x0: el.x + vx * r0,\r\n      y0: el.y + vy * r0,\r\n      x1: el.x + vx * r1,\r\n      y1: el.y + vy * r1,\r\n      vx: vx,\r\n      vy: vy\r\n    }, config);\r\n  },\r\n\r\n  point: function(el, config) {\r\n    var v = orient(el, config.origin);\r\n    var rx = v.x * el.options.radius;\r\n    var ry = v.y * el.options.radius;\r\n\r\n    return compute$1({\r\n      x0: el.x - rx,\r\n      y0: el.y - ry,\r\n      x1: el.x + rx,\r\n      y1: el.y + ry,\r\n      vx: v.x,\r\n      vy: v.y\r\n    }, config);\r\n  },\r\n\r\n  bar: function(el, config) {\r\n    var v = orient(el, config.origin);\r\n    var x = el.x;\r\n    var y = el.y;\r\n    var sx = 0;\r\n    var sy = 0;\r\n\r\n    if (el.horizontal) {\r\n      x = Math.min(el.x, el.base);\r\n      sx = Math.abs(el.base - el.x);\r\n    } else {\r\n      y = Math.min(el.y, el.base);\r\n      sy = Math.abs(el.base - el.y);\r\n    }\r\n\r\n    return compute$1({\r\n      x0: x,\r\n      y0: y + sy,\r\n      x1: x + sx,\r\n      y1: y,\r\n      vx: v.x,\r\n      vy: v.y\r\n    }, config);\r\n  },\r\n\r\n  fallback: function(el, config) {\r\n    var v = orient(el, config.origin);\r\n\r\n    return compute$1({\r\n      x0: el.x,\r\n      y0: el.y,\r\n      x1: el.x + (el.width || 0),\r\n      y1: el.y + (el.height || 0),\r\n      vx: v.x,\r\n      vy: v.y\r\n    }, config);\r\n  }\r\n};\r\n\r\nvar rasterize = utils.rasterize;\r\n\r\nfunction boundingRects(model) {\r\n  var borderWidth = model.borderWidth || 0;\r\n  var padding = model.padding;\r\n  var th = model.size.height;\r\n  var tw = model.size.width;\r\n  var tx = -tw / 2;\r\n  var ty = -th / 2;\r\n\r\n  return {\r\n    frame: {\r\n      x: tx - padding.left - borderWidth,\r\n      y: ty - padding.top - borderWidth,\r\n      w: tw + padding.width + borderWidth * 2,\r\n      h: th + padding.height + borderWidth * 2\r\n    },\r\n    text: {\r\n      x: tx,\r\n      y: ty,\r\n      w: tw,\r\n      h: th\r\n    }\r\n  };\r\n}\r\n\r\nfunction getScaleOrigin(el, context) {\r\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\r\n\r\n  if (!scale) {\r\n    return null;\r\n  }\r\n\r\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\r\n    return {x: scale.xCenter, y: scale.yCenter};\r\n  }\r\n\r\n  var pixel = scale.getBasePixel();\r\n  return el.horizontal ?\r\n    {x: pixel, y: null} :\r\n    {x: null, y: pixel};\r\n}\r\n\r\nfunction getPositioner(el) {\r\n  if (el instanceof ArcElement) {\r\n    return positioners.arc;\r\n  }\r\n  if (el instanceof PointElement) {\r\n    return positioners.point;\r\n  }\r\n  if (el instanceof BarElement) {\r\n    return positioners.bar;\r\n  }\r\n  return positioners.fallback;\r\n}\r\n\r\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\r\n  var HALF_PI = Math.PI / 2;\r\n\r\n  if (radius) {\r\n    var r = Math.min(radius, h / 2, w / 2);\r\n    var left = x + r;\r\n    var top = y + r;\r\n    var right = x + w - r;\r\n    var bottom = y + h - r;\r\n\r\n    ctx.moveTo(x, top);\r\n    if (left < right && top < bottom) {\r\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\r\n      ctx.arc(right, top, r, -HALF_PI, 0);\r\n      ctx.arc(right, bottom, r, 0, HALF_PI);\r\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\r\n    } else if (left < right) {\r\n      ctx.moveTo(left, y);\r\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\r\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\r\n    } else if (top < bottom) {\r\n      ctx.arc(left, top, r, -Math.PI, 0);\r\n      ctx.arc(left, bottom, r, 0, Math.PI);\r\n    } else {\r\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\r\n    }\r\n    ctx.closePath();\r\n    ctx.moveTo(x, y);\r\n  } else {\r\n    ctx.rect(x, y, w, h);\r\n  }\r\n}\r\n\r\nfunction drawFrame(ctx, rect, model) {\r\n  var bgColor = model.backgroundColor;\r\n  var borderColor = model.borderColor;\r\n  var borderWidth = model.borderWidth;\r\n\r\n  if (!bgColor && (!borderColor || !borderWidth)) {\r\n    return;\r\n  }\r\n\r\n  ctx.beginPath();\r\n\r\n  drawRoundedRect(\r\n    ctx,\r\n    rasterize(rect.x) + borderWidth / 2,\r\n    rasterize(rect.y) + borderWidth / 2,\r\n    rasterize(rect.w) - borderWidth,\r\n    rasterize(rect.h) - borderWidth,\r\n    model.borderRadius);\r\n\r\n  ctx.closePath();\r\n\r\n  if (bgColor) {\r\n    ctx.fillStyle = bgColor;\r\n    ctx.fill();\r\n  }\r\n\r\n  if (borderColor && borderWidth) {\r\n    ctx.strokeStyle = borderColor;\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nfunction textGeometry(rect, align, font) {\r\n  var h = font.lineHeight;\r\n  var w = rect.w;\r\n  var x = rect.x;\r\n  var y = rect.y + h / 2;\r\n\r\n  if (align === 'center') {\r\n    x += w / 2;\r\n  } else if (align === 'end' || align === 'right') {\r\n    x += w;\r\n  }\r\n\r\n  return {\r\n    h: h,\r\n    w: w,\r\n    x: x,\r\n    y: y\r\n  };\r\n}\r\n\r\nfunction drawTextLine(ctx, text, cfg) {\r\n  var shadow = ctx.shadowBlur;\r\n  var stroked = cfg.stroked;\r\n  var x = rasterize(cfg.x);\r\n  var y = rasterize(cfg.y);\r\n  var w = rasterize(cfg.w);\r\n\r\n  if (stroked) {\r\n    ctx.strokeText(text, x, y, w);\r\n  }\r\n\r\n  if (cfg.filled) {\r\n    if (shadow && stroked) {\r\n      // Prevent drawing shadow on both the text stroke and fill, so\r\n      // if the text is stroked, remove the shadow for the text fill.\r\n      ctx.shadowBlur = 0;\r\n    }\r\n\r\n    ctx.fillText(text, x, y, w);\r\n\r\n    if (shadow && stroked) {\r\n      ctx.shadowBlur = shadow;\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawText(ctx, lines, rect, model) {\r\n  var align = model.textAlign;\r\n  var color = model.color;\r\n  var filled = !!color;\r\n  var font = model.font;\r\n  var ilen = lines.length;\r\n  var strokeColor = model.textStrokeColor;\r\n  var strokeWidth = model.textStrokeWidth;\r\n  var stroked = strokeColor && strokeWidth;\r\n  var i;\r\n\r\n  if (!ilen || (!filled && !stroked)) {\r\n    return;\r\n  }\r\n\r\n  // Adjust coordinates based on text alignment and line height\r\n  rect = textGeometry(rect, align, font);\r\n\r\n  ctx.font = font.string;\r\n  ctx.textAlign = align;\r\n  ctx.textBaseline = 'middle';\r\n  ctx.shadowBlur = model.textShadowBlur;\r\n  ctx.shadowColor = model.textShadowColor;\r\n\r\n  if (filled) {\r\n    ctx.fillStyle = color;\r\n  }\r\n  if (stroked) {\r\n    ctx.lineJoin = 'round';\r\n    ctx.lineWidth = strokeWidth;\r\n    ctx.strokeStyle = strokeColor;\r\n  }\r\n\r\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\r\n    drawTextLine(ctx, lines[i], {\r\n      stroked: stroked,\r\n      filled: filled,\r\n      w: rect.w,\r\n      x: rect.x,\r\n      y: rect.y + rect.h * i\r\n    });\r\n  }\r\n}\r\n\r\nvar Label = function(config, ctx, el, index) {\r\n  var me = this;\r\n\r\n  me._config = config;\r\n  me._index = index;\r\n  me._model = null;\r\n  me._rects = null;\r\n  me._ctx = ctx;\r\n  me._el = el;\r\n};\r\n\r\nmerge(Label.prototype, {\r\n  /**\r\n   * @private\r\n   */\r\n  _modelize: function(display, lines, config, context) {\r\n    var me = this;\r\n    var index = me._index;\r\n    var font = toFont(resolve([config.font, {}], context, index));\r\n    var color = resolve([config.color, defaults$1.color], context, index);\r\n\r\n    return {\r\n      align: resolve([config.align, 'center'], context, index),\r\n      anchor: resolve([config.anchor, 'center'], context, index),\r\n      area: context.chart.chartArea,\r\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\r\n      borderColor: resolve([config.borderColor, null], context, index),\r\n      borderRadius: resolve([config.borderRadius, 0], context, index),\r\n      borderWidth: resolve([config.borderWidth, 0], context, index),\r\n      clamp: resolve([config.clamp, false], context, index),\r\n      clip: resolve([config.clip, false], context, index),\r\n      color: color,\r\n      display: display,\r\n      font: font,\r\n      lines: lines,\r\n      offset: resolve([config.offset, 4], context, index),\r\n      opacity: resolve([config.opacity, 1], context, index),\r\n      origin: getScaleOrigin(me._el, context),\r\n      padding: toPadding(resolve([config.padding, 4], context, index)),\r\n      positioner: getPositioner(me._el),\r\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\r\n      size: utils.textSize(me._ctx, lines, font),\r\n      textAlign: resolve([config.textAlign, 'start'], context, index),\r\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\r\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\r\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\r\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\r\n    };\r\n  },\r\n\r\n  update: function(context) {\r\n    var me = this;\r\n    var model = null;\r\n    var rects = null;\r\n    var index = me._index;\r\n    var config = me._config;\r\n    var value, label, lines;\r\n\r\n    // We first resolve the display option (separately) to avoid computing\r\n    // other options in case the label is hidden (i.e. display: false).\r\n    var display = resolve([config.display, true], context, index);\r\n\r\n    if (display) {\r\n      value = context.dataset.data[index];\r\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\r\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\r\n\r\n      if (lines.length) {\r\n        model = me._modelize(display, lines, config, context);\r\n        rects = boundingRects(model);\r\n      }\r\n    }\r\n\r\n    me._model = model;\r\n    me._rects = rects;\r\n  },\r\n\r\n  geometry: function() {\r\n    return this._rects ? this._rects.frame : {};\r\n  },\r\n\r\n  rotation: function() {\r\n    return this._model ? this._model.rotation : 0;\r\n  },\r\n\r\n  visible: function() {\r\n    return this._model && this._model.opacity;\r\n  },\r\n\r\n  model: function() {\r\n    return this._model;\r\n  },\r\n\r\n  draw: function(chart, center) {\r\n    var me = this;\r\n    var ctx = chart.ctx;\r\n    var model = me._model;\r\n    var rects = me._rects;\r\n    var area;\r\n\r\n    if (!this.visible()) {\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n\r\n    if (model.clip) {\r\n      area = model.area;\r\n      ctx.beginPath();\r\n      ctx.rect(\r\n        area.left,\r\n        area.top,\r\n        area.right - area.left,\r\n        area.bottom - area.top);\r\n      ctx.clip();\r\n    }\r\n\r\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\r\n    ctx.translate(rasterize(center.x), rasterize(center.y));\r\n    ctx.rotate(model.rotation);\r\n\r\n    drawFrame(ctx, rects.frame, model);\r\n    drawText(ctx, model.lines, rects.text, model);\r\n\r\n    ctx.restore();\r\n  }\r\n});\r\n\r\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\r\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\r\n\r\nfunction rotated(point, center, angle) {\r\n  var cos = Math.cos(angle);\r\n  var sin = Math.sin(angle);\r\n  var cx = center.x;\r\n  var cy = center.y;\r\n\r\n  return {\r\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\r\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\r\n  };\r\n}\r\n\r\nfunction projected(points, axis) {\r\n  var min = MAX_INTEGER;\r\n  var max = MIN_INTEGER;\r\n  var origin = axis.origin;\r\n  var i, pt, vx, vy, dp;\r\n\r\n  for (i = 0; i < points.length; ++i) {\r\n    pt = points[i];\r\n    vx = pt.x - origin.x;\r\n    vy = pt.y - origin.y;\r\n    dp = axis.vx * vx + axis.vy * vy;\r\n    min = Math.min(min, dp);\r\n    max = Math.max(max, dp);\r\n  }\r\n\r\n  return {\r\n    min: min,\r\n    max: max\r\n  };\r\n}\r\n\r\nfunction toAxis(p0, p1) {\r\n  var vx = p1.x - p0.x;\r\n  var vy = p1.y - p0.y;\r\n  var ln = Math.sqrt(vx * vx + vy * vy);\r\n\r\n  return {\r\n    vx: (p1.x - p0.x) / ln,\r\n    vy: (p1.y - p0.y) / ln,\r\n    origin: p0,\r\n    ln: ln\r\n  };\r\n}\r\n\r\nvar HitBox = function() {\r\n  this._rotation = 0;\r\n  this._rect = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0\r\n  };\r\n};\r\n\r\nmerge(HitBox.prototype, {\r\n  center: function() {\r\n    var r = this._rect;\r\n    return {\r\n      x: r.x + r.w / 2,\r\n      y: r.y + r.h / 2\r\n    };\r\n  },\r\n\r\n  update: function(center, rect, rotation) {\r\n    this._rotation = rotation;\r\n    this._rect = {\r\n      x: rect.x + center.x,\r\n      y: rect.y + center.y,\r\n      w: rect.w,\r\n      h: rect.h\r\n    };\r\n  },\r\n\r\n  contains: function(point) {\r\n    var me = this;\r\n    var margin = 1;\r\n    var rect = me._rect;\r\n\r\n    point = rotated(point, me.center(), -me._rotation);\r\n\r\n    return !(point.x < rect.x - margin\r\n      || point.y < rect.y - margin\r\n      || point.x > rect.x + rect.w + margin * 2\r\n      || point.y > rect.y + rect.h + margin * 2);\r\n  },\r\n\r\n  // Separating Axis Theorem\r\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\r\n  intersects: function(other) {\r\n    var r0 = this._points();\r\n    var r1 = other._points();\r\n    var axes = [\r\n      toAxis(r0[0], r0[1]),\r\n      toAxis(r0[0], r0[3])\r\n    ];\r\n    var i, pr0, pr1;\r\n\r\n    if (this._rotation !== other._rotation) {\r\n      // Only separate with r1 axis if the rotation is different,\r\n      // else it's enough to separate r0 and r1 with r0 axis only!\r\n      axes.push(\r\n        toAxis(r1[0], r1[1]),\r\n        toAxis(r1[0], r1[3])\r\n      );\r\n    }\r\n\r\n    for (i = 0; i < axes.length; ++i) {\r\n      pr0 = projected(r0, axes[i]);\r\n      pr1 = projected(r1, axes[i]);\r\n\r\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _points: function() {\r\n    var me = this;\r\n    var rect = me._rect;\r\n    var angle = me._rotation;\r\n    var center = me.center();\r\n\r\n    return [\r\n      rotated({x: rect.x, y: rect.y}, center, angle),\r\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\r\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\r\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\r\n    ];\r\n  }\r\n});\r\n\r\nfunction coordinates(el, model, geometry) {\r\n  var point = model.positioner(el, model);\r\n  var vx = point.vx;\r\n  var vy = point.vy;\r\n\r\n  if (!vx && !vy) {\r\n    // if aligned center, we don't want to offset the center point\r\n    return {x: point.x, y: point.y};\r\n  }\r\n\r\n  var w = geometry.w;\r\n  var h = geometry.h;\r\n\r\n  // take in account the label rotation\r\n  var rotation = model.rotation;\r\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\r\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\r\n\r\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\r\n  // w or h respectively (else we would calculate the distance to the\r\n  // ellipse inscribed in the bounding rect)\r\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\r\n  dx *= vx * vs;\r\n  dy *= vy * vs;\r\n\r\n  // finally, include the explicit offset\r\n  dx += model.offset * vx;\r\n  dy += model.offset * vy;\r\n\r\n  return {\r\n    x: point.x + dx,\r\n    y: point.y + dy\r\n  };\r\n}\r\n\r\nfunction collide(labels, collider) {\r\n  var i, j, s0, s1;\r\n\r\n  // IMPORTANT Iterate in the reverse order since items at the end of the\r\n  // list have an higher weight/priority and thus should be less impacted\r\n  // by the overlapping strategy.\r\n\r\n  for (i = labels.length - 1; i >= 0; --i) {\r\n    s0 = labels[i].$layout;\r\n\r\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\r\n      s1 = labels[j].$layout;\r\n\r\n      if (s1._visible && s0._box.intersects(s1._box)) {\r\n        collider(s0, s1);\r\n      }\r\n    }\r\n  }\r\n\r\n  return labels;\r\n}\r\n\r\nfunction compute(labels) {\r\n  var i, ilen, label, state, geometry, center, proxy;\r\n\r\n  // Initialize labels for overlap detection\r\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n    label = labels[i];\r\n    state = label.$layout;\r\n\r\n    if (state._visible) {\r\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\r\n      // abstract reading values in positioners. Also, using string arrays to\r\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\r\n      // positioners inefficient in the normal case (i.e. not the final values)\r\n      // and the code a bit ugly, so let's use a Proxy instead.\r\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\r\n\r\n      geometry = label.geometry();\r\n      center = coordinates(proxy, label.model(), geometry);\r\n      state._box.update(center, geometry, label.rotation());\r\n    }\r\n  }\r\n\r\n  // Auto hide overlapping labels\r\n  return collide(labels, function(s0, s1) {\r\n    var h0 = s0._hidable;\r\n    var h1 = s1._hidable;\r\n\r\n    if ((h0 && h1) || h1) {\r\n      s1._visible = false;\r\n    } else if (h0) {\r\n      s0._visible = false;\r\n    }\r\n  });\r\n}\r\n\r\nvar layout = {\r\n  prepare: function(datasets) {\r\n    var labels = [];\r\n    var i, j, ilen, jlen, label;\r\n\r\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\r\n        label = datasets[i][j];\r\n        labels.push(label);\r\n        label.$layout = {\r\n          _box: new HitBox(),\r\n          _hidable: false,\r\n          _visible: true,\r\n          _set: i,\r\n          _idx: label._index\r\n        };\r\n      }\r\n    }\r\n\r\n    // TODO New `z` option: labels with a higher z-index are drawn\r\n    // of top of the ones with a lower index. Lowest z-index labels\r\n    // are also discarded first when hiding overlapping labels.\r\n    labels.sort(function(a, b) {\r\n      var sa = a.$layout;\r\n      var sb = b.$layout;\r\n\r\n      return sa._idx === sb._idx\r\n        ? sb._set - sa._set\r\n        : sb._idx - sa._idx;\r\n    });\r\n\r\n    this.update(labels);\r\n\r\n    return labels;\r\n  },\r\n\r\n  update: function(labels) {\r\n    var dirty = false;\r\n    var i, ilen, label, model, state;\r\n\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      label = labels[i];\r\n      model = label.model();\r\n      state = label.$layout;\r\n      state._hidable = model && model.display === 'auto';\r\n      state._visible = label.visible();\r\n      dirty |= state._hidable;\r\n    }\r\n\r\n    if (dirty) {\r\n      compute(labels);\r\n    }\r\n  },\r\n\r\n  lookup: function(labels, point) {\r\n    var i, state;\r\n\r\n    // IMPORTANT Iterate in the reverse order since items at the end of\r\n    // the list have an higher z-index, thus should be picked first.\r\n\r\n    for (i = labels.length - 1; i >= 0; --i) {\r\n      state = labels[i].$layout;\r\n\r\n      if (state && state._visible && state._box.contains(point)) {\r\n        return labels[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  draw: function(chart, labels) {\r\n    var i, ilen, label, state, geometry, center;\r\n\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      label = labels[i];\r\n      state = label.$layout;\r\n\r\n      if (state._visible) {\r\n        geometry = label.geometry();\r\n        center = coordinates(label._el, label.model(), geometry);\r\n        state._box.update(center, geometry, label.rotation());\r\n        label.draw(chart, center);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar formatter = function(value) {\r\n  if (isNullOrUndef(value)) {\r\n    return null;\r\n  }\r\n\r\n  var label = value;\r\n  var keys, klen, k;\r\n  if (isObject(value)) {\r\n    if (!isNullOrUndef(value.label)) {\r\n      label = value.label;\r\n    } else if (!isNullOrUndef(value.r)) {\r\n      label = value.r;\r\n    } else {\r\n      label = '';\r\n      keys = Object.keys(value);\r\n      for (k = 0, klen = keys.length; k < klen; ++k) {\r\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\r\n      }\r\n    }\r\n  }\r\n\r\n  return '' + label;\r\n};\r\n\r\n/**\r\n * IMPORTANT: make sure to also update tests and TypeScript definition\r\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\r\n */\r\n\r\nvar defaults = {\r\n  align: 'center',\r\n  anchor: 'center',\r\n  backgroundColor: null,\r\n  borderColor: null,\r\n  borderRadius: 0,\r\n  borderWidth: 0,\r\n  clamp: false,\r\n  clip: false,\r\n  color: undefined,\r\n  display: true,\r\n  font: {\r\n    family: undefined,\r\n    lineHeight: 1.2,\r\n    size: undefined,\r\n    style: undefined,\r\n    weight: null\r\n  },\r\n  formatter: formatter,\r\n  labels: undefined,\r\n  listeners: {},\r\n  offset: 4,\r\n  opacity: 1,\r\n  padding: {\r\n    top: 4,\r\n    right: 4,\r\n    bottom: 4,\r\n    left: 4\r\n  },\r\n  rotation: 0,\r\n  textAlign: 'start',\r\n  textStrokeColor: undefined,\r\n  textStrokeWidth: 0,\r\n  textShadowBlur: 0,\r\n  textShadowColor: undefined\r\n};\r\n\r\n/**\r\n * @see https://github.com/chartjs/Chart.js/issues/4176\r\n */\r\n\r\nvar EXPANDO_KEY = '$datalabels';\r\nvar DEFAULT_KEY = '$default';\r\n\r\nfunction configure(dataset, options) {\r\n  var override = dataset.datalabels;\r\n  var listeners = {};\r\n  var configs = [];\r\n  var labels, keys;\r\n\r\n  if (override === false) {\r\n    return null;\r\n  }\r\n  if (override === true) {\r\n    override = {};\r\n  }\r\n\r\n  options = merge({}, [options, override]);\r\n  labels = options.labels || {};\r\n  keys = Object.keys(labels);\r\n  delete options.labels;\r\n\r\n  if (keys.length) {\r\n    keys.forEach(function(key) {\r\n      if (labels[key]) {\r\n        configs.push(merge({}, [\r\n          options,\r\n          labels[key],\r\n          {_key: key}\r\n        ]));\r\n      }\r\n    });\r\n  } else {\r\n    // Default label if no \"named\" label defined.\r\n    configs.push(options);\r\n  }\r\n\r\n  // listeners: {<event-type>: {<label-key>: <fn>}}\r\n  listeners = configs.reduce(function(target, config) {\r\n    each(config.listeners || {}, function(fn, event) {\r\n      target[event] = target[event] || {};\r\n      target[event][config._key || DEFAULT_KEY] = fn;\r\n    });\r\n\r\n    delete config.listeners;\r\n    return target;\r\n  }, {});\r\n\r\n  return {\r\n    labels: configs,\r\n    listeners: listeners\r\n  };\r\n}\r\n\r\nfunction dispatchEvent(chart, listeners, label, event) {\r\n  if (!listeners) {\r\n    return;\r\n  }\r\n\r\n  var context = label.$context;\r\n  var groups = label.$groups;\r\n  var callback$1;\r\n\r\n  if (!listeners[groups._set]) {\r\n    return;\r\n  }\r\n\r\n  callback$1 = listeners[groups._set][groups._key];\r\n  if (!callback$1) {\r\n    return;\r\n  }\r\n\r\n  if (callback(callback$1, [context, event]) === true) {\r\n    // Users are allowed to tweak the given context by injecting values that can be\r\n    // used in scriptable options to display labels differently based on the current\r\n    // event (e.g. highlight an hovered label). That's why we update the label with\r\n    // the output context and schedule a new chart render by setting it dirty.\r\n    chart[EXPANDO_KEY]._dirty = true;\r\n    label.update(context);\r\n  }\r\n}\r\n\r\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\r\n  var enter, leave;\r\n\r\n  if (!previous && !label) {\r\n    return;\r\n  }\r\n\r\n  if (!previous) {\r\n    enter = true;\r\n  } else if (!label) {\r\n    leave = true;\r\n  } else if (previous !== label) {\r\n    leave = enter = true;\r\n  }\r\n\r\n  if (leave) {\r\n    dispatchEvent(chart, listeners.leave, previous, event);\r\n  }\r\n  if (enter) {\r\n    dispatchEvent(chart, listeners.enter, label, event);\r\n  }\r\n}\r\n\r\nfunction handleMoveEvents(chart, event) {\r\n  var expando = chart[EXPANDO_KEY];\r\n  var listeners = expando._listeners;\r\n  var previous, label;\r\n\r\n  if (!listeners.enter && !listeners.leave) {\r\n    return;\r\n  }\r\n\r\n  if (event.type === 'mousemove') {\r\n    label = layout.lookup(expando._labels, event);\r\n  } else if (event.type !== 'mouseout') {\r\n    return;\r\n  }\r\n\r\n  previous = expando._hovered;\r\n  expando._hovered = label;\r\n  dispatchMoveEvents(chart, listeners, previous, label, event);\r\n}\r\n\r\nfunction handleClickEvents(chart, event) {\r\n  var expando = chart[EXPANDO_KEY];\r\n  var handlers = expando._listeners.click;\r\n  var label = handlers && layout.lookup(expando._labels, event);\r\n  if (label) {\r\n    dispatchEvent(chart, handlers, label, event);\r\n  }\r\n}\r\n\r\nvar plugin = {\r\n  id: 'datalabels',\r\n\r\n  defaults: defaults,\r\n\r\n  beforeInit: function(chart) {\r\n    chart[EXPANDO_KEY] = {\r\n      _actives: []\r\n    };\r\n  },\r\n\r\n  beforeUpdate: function(chart) {\r\n    var expando = chart[EXPANDO_KEY];\r\n    expando._listened = false;\r\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\r\n    expando._datasets = [];      // per dataset labels: [Label[]]\r\n    expando._labels = [];        // layouted labels: Label[]\r\n  },\r\n\r\n  afterDatasetUpdate: function(chart, args, options) {\r\n    var datasetIndex = args.index;\r\n    var expando = chart[EXPANDO_KEY];\r\n    var labels = expando._datasets[datasetIndex] = [];\r\n    var visible = chart.isDatasetVisible(datasetIndex);\r\n    var dataset = chart.data.datasets[datasetIndex];\r\n    var config = configure(dataset, options);\r\n    var elements = args.meta.data || [];\r\n    var ctx = chart.ctx;\r\n    var i, j, ilen, jlen, cfg, key, el, label;\r\n\r\n    ctx.save();\r\n\r\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n      el = elements[i];\r\n      el[EXPANDO_KEY] = [];\r\n\r\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\r\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\r\n          cfg = config.labels[j];\r\n          key = cfg._key;\r\n\r\n          label = new Label(cfg, ctx, el, i);\r\n          label.$groups = {\r\n            _set: datasetIndex,\r\n            _key: key || DEFAULT_KEY\r\n          };\r\n          label.$context = {\r\n            active: false,\r\n            chart: chart,\r\n            dataIndex: i,\r\n            dataset: dataset,\r\n            datasetIndex: datasetIndex\r\n          };\r\n\r\n          label.update(label.$context);\r\n          el[EXPANDO_KEY].push(label);\r\n          labels.push(label);\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    // Store listeners at the chart level and per event type to optimize\r\n    // cases where no listeners are registered for a specific event.\r\n    merge(expando._listeners, config.listeners, {\r\n      merger: function(event, target, source) {\r\n        target[event] = target[event] || {};\r\n        target[event][args.index] = source[event];\r\n        expando._listened = true;\r\n      }\r\n    });\r\n  },\r\n\r\n  afterUpdate: function(chart) {\r\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\r\n  },\r\n\r\n  // Draw labels on top of all dataset elements\r\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\r\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\r\n  afterDatasetsDraw: function(chart) {\r\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\r\n  },\r\n\r\n  beforeEvent: function(chart, args) {\r\n    // If there is no listener registered for this chart, `listened` will be false,\r\n    // meaning we can immediately ignore the incoming event and avoid useless extra\r\n    // computation for users who don't implement label interactions.\r\n    if (chart[EXPANDO_KEY]._listened) {\r\n      var event = args.event;\r\n      switch (event.type) {\r\n      case 'mousemove':\r\n      case 'mouseout':\r\n        handleMoveEvents(chart, event);\r\n        break;\r\n      case 'click':\r\n        handleClickEvents(chart, event);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  afterEvent: function(chart) {\r\n    var expando = chart[EXPANDO_KEY];\r\n    var previous = expando._actives;\r\n    var actives = expando._actives = chart.getActiveElements();\r\n    var updates = utils.arrayDiff(previous, actives);\r\n    var i, ilen, j, jlen, update, label, labels;\r\n\r\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\r\n      update = updates[i];\r\n      if (update[1]) {\r\n        labels = update[0].element[EXPANDO_KEY] || [];\r\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\r\n          label = labels[j];\r\n          label.$context.active = (update[1] === 1);\r\n          label.update(label.$context);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (expando._dirty || updates.length) {\r\n      layout.update(expando._labels);\r\n      chart.render();\r\n    }\r\n\r\n    delete expando._dirty;\r\n  }\r\n};\r\n\r\nexport { plugin as default };\r\n"],
  "mappings": "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",
  "names": ["HALF_PI", "color", "defaults"]
}
